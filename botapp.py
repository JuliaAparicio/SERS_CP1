import telebot
import unicodedata
import difflib

# === CONFIGURA√á√ÉO DO BOT DO TELEGRAM ===
import os
TOKEN = "SEU_TOKEN_AQUI"
bot = telebot.TeleBot(TOKEN)

# === FUN√á√ïES DE NORMALIZA√á√ÉO E SIMILARIDADE ===
def normalizar_texto(texto):
    texto = texto.lower().strip()
    texto = unicodedata.normalize('NFKD', texto).encode('ASCII', 'ignore').decode('ASCII')
    return texto

def texto_parecido(texto, lista_referencia, corte=0.8):
    texto = normalizar_texto(texto)
    correspondencias = difflib.get_close_matches(texto, lista_referencia, n=1, cutoff=corte)
    return correspondencias[0] if correspondencias else None

# === MENSAGEM DE BOAS-VINDAS ===
@bot.message_handler(func=lambda msg: texto_parecido(msg.text, ['oi solara', 'come√ßar']))
def boas_vindas(msg):
    bot.reply_to(msg, 'Ol√°, espero que o seu dia esteja sendo bom! Pode me perguntar algo sobre o clima ou energia.')

# === MENSAGEM SOBRE O TEMPO ===
@bot.message_handler(func=lambda msg: texto_parecido(msg.text, ['qual a previs√£o do tempo para amanh√£']))
def previsao_tempo(msg):
    bot.reply_to(msg, '''üå§Ô∏è Previs√£o do Tempo para Amanh√£

Amanh√£ o dia ser√° de c√©u parcialmente nublado, com temperaturas entre 14¬∞C e 21¬∞C. A chance de chuva √© baixa, e o clima deve se manter est√°vel ao longo do dia.

Um cen√°rio tranquilo, com varia√ß√µes suaves ‚Äî perfeito para seguir a rotina com leveza.''')

# === MENSAGEM SOBRE ABASTECIMENTO ENERG√âTICO === 
@bot.message_handler(func=lambda msg: texto_parecido(msg.text, ['e como est√° o meu abastecimento energ√©tico']))
def abastecimento_hoje(msg):
    bot.reply_to(msg, '''Se sua casa pudesse falar, ela diria: ‚ÄúHoje estou cheia de energia, pronta pra te servir com sol no cora√ß√£o e watts na tomada.‚Äù

As baterias est√£o 92% carregadas neste momento, garantindo autonomia mesmo durante a noite. Nenhum alerta foi registrado e o consumo est√° dentro da m√©dia habitual.

Tudo funcionando como esperado, caso algo mude eu mandarei um alerta para que possamos ver a melhor forma para solucionar o seu problema!''')

# === MENSAGEM SOBRE PREOCUPA√á√ÉO COM O ABASTECIMENTO DE AMANH√É === 
@bot.message_handler(func=lambda msg: texto_parecido(msg.text, ['devo me preocupar com o meu abasteciomento energ√©tico de amanh√£']))
def abastecimento_amanha(msg):
    bot.reply_to(msg, '''Tradu√ß√£o para o dia ‚òÄÔ∏è
Geladeira? Tranquila. 
Chuveiro el√©trico? Pode usar sem culpa (mas com consci√™ncia). 
Ar-condicionado? Vai rodar com energia limpa. 
Bateria solar? Provavelmente carregada at√© o talo.

N√£o precisa se preocupar, caso algo mude estarei aqui para te avisar!‚ú®''')

# === MENSAGEM DE ENCERRAMENTO === 
@bot.message_handler(func=lambda msg: texto_parecido(msg.text, ['combinado, obrigada!']))
def despedida(msg):
    bot.reply_to(msg, 'Estou aqui para te ajudar sempre que precisar, at√© breve!')

# === MANT√âM O BOT ATIVO ===
bot.infinity_polling()
